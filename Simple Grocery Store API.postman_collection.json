{
	"info": {
		"_postman_id": "51a13f51-5949-4651-b94b-cae5a2a71cea",
		"name": "Simple Grocery Store API Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23688510"
	},
	"item": [
		{
			"name": "Happy Path",
			"item": [
				{
					"name": "API Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status check\", () => {",
									"    response = pm.response.json();",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response.status).to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"let product;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Products check\", function () {",
									"    response = pm.response.json();",
									"",
									"    pm.expect(response).to.be.an('array');",
									"    pm.expect(response.length).to.be.above(0);",
									"",
									"    product = response[0];",
									"    pm.expect(product).to.be.an('object');",
									"    pm.expect(product).to.haveOwnProperty('id');",
									"    pm.expect(product.category).to.be.a('string');",
									"    pm.expect(product.name).to.be.a('string');",
									"    pm.expect(product).to.haveOwnProperty('inStock');",
									"    pm.collectionVariables.set('firstProductId', product.id);",
									"    pm.collectionVariables.set('secondProductId', response[1].id)",
									"",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products?results=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "category",
									"value": "fresh-produce",
									"disabled": true
								},
								{
									"key": "results",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"let requestedProductId;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"});",
									"",
									"pm.test(\"Products check\", function () {",
									"    pm.expect(response).to.be.a('object');",
									"    pm.expect(response.id).to.be.a('number');",
									"    pm.expect(response.category).to.be.a('string');",
									"    pm.expect(response.name).to.be.a('string');",
									"    pm.expect(response.manufacturer).to.be.a('string');",
									"    pm.expect(response.price).to.be.a('number');",
									"    pm.expect(response['current-stock']).to.be.a('number');",
									"    pm.expect(response.inStock).to.be.true;",
									"});",
									"",
									"pm.test('Correct product was retrieved', () => {",
									"    requestedProductId = pm.collectionVariables.get('firstProductId');",
									"    pm.expect(response.id).to.eql(requestedProductId);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{firstProductId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    response = pm.response.json();",
									"",
									"});",
									"",
									"pm.test('Response has valid card id', () => {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response).haveOwnProperty('cartId');",
									"    pm.expect(response.cartId).to.be.a('string');",
									"    pm.collectionVariables.set('cartId', response.cartId);",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"});",
									"",
									"pm.test('Response has valid card id', () => {",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response).haveOwnProperty('items');",
									"    pm.expect(response.created).to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add item to cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    response = pm.response.json();",
									"});",
									"",
									"pm.test('Item was created', () => {",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response.created).to.be.true;",
									"    pm.expect(response.itemId).to.be.a('number');",
									"    pm.collectionVariables.set('lastAddedItemId', response.itemId);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"productId\": {{firstProductId}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								""
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cart items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"",
									"});",
									"",
									"pm.test('Response is valid', () => {",
									"    pm.expect(response).to.be.an('array');",
									"    pm.expect(response[0].id).to.be.eq(pm.collectionVariables.get('lastAddedItemId'));",
									"    pm.expect(response[0].productId).to.be.eq(pm.collectionVariables.get('firstProductId'));",
									"    pm.expect(response[0].quantity).to.be.a('number');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get added item cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"});",
									"",
									"pm.test('Response has valid card id', () => {",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response).haveOwnProperty('items');",
									"    pm.expect(response.created).to.be.a('string');",
									"});",
									"",
									"pm.test('Response item is valid', () => {",
									"    pm.expect(response.items).to.be.an('array');",
									"    pm.expect(response.items[0].id).to.be.eq(pm.collectionVariables.get('lastAddedItemId'));",
									"    pm.expect(response.items[0].productId).to.be.eq(pm.collectionVariables.get('firstProductId'));",
									"    pm.expect(response.items[0].quantity).to.be.a('number');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quantity\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{lastAddedItemId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get updated cart items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"",
									"});",
									"",
									"pm.test('Response is valid', () => {",
									"    pm.expect(response).to.be.an('array');",
									"    pm.expect(response[0].id).to.be.eq(pm.collectionVariables.get('lastAddedItemId'));",
									"    pm.expect(response[0].productId).to.be.eq(pm.collectionVariables.get('firstProductId'));",
									"    pm.expect(response[0].quantity).to.be.eql(2);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get updated item cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"});",
									"",
									"pm.test('Response has valid card id', () => {",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response).haveOwnProperty('items');",
									"    pm.expect(response.created).to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace product in cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": {{secondProductId}},\n    \"quantity\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{lastAddedItemId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get replaced cart items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"",
									"});",
									"",
									"pm.test('Response is valid', () => {",
									"    pm.expect(response).to.be.an('array');",
									"    pm.expect(response[0].id).to.be.eq(pm.collectionVariables.get('lastAddedItemId'));",
									"    pm.expect(response[0].productId).to.be.eq(pm.collectionVariables.get('secondProductId'));",
									"    pm.expect(response[0].quantity).to.be.eql(3);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get replaced item cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"});",
									"",
									"pm.test('Response has valid card id', () => {",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response).haveOwnProperty('items');",
									"    pm.expect(response.created).to.be.a('string');",
									"});",
									"",
									"pm.test('Response is valid', () => {",
									"    pm.expect(response.items).to.be.an('array');",
									"    pm.expect(response.items[0].id).to.be.eq(pm.collectionVariables.get('lastAddedItemId'));",
									"    pm.expect(response.items[0].productId).to.be.eq(pm.collectionVariables.get('secondProductId'));",
									"    pm.expect(response.items[0].quantity).to.be.eql(3);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete item in cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{lastAddedItemId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deleted cart items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"",
									"});",
									"",
									"pm.test('Response is valid', () => {",
									"    pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deleted item cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    response = pm.response.json();",
									"});",
									"",
									"pm.test('Response has valid card id', () => {",
									"    pm.expect(response).to.be.an('object');",
									"    pm.expect(response).haveOwnProperty('items');",
									"    pm.expect(response.created).to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/:cartId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simple-grocery-store-api.glitch.me"
		},
		{
			"key": "accessToken",
			"value": "YOUR ACCESS TOKEN",
			"type": "string"
		},
		{
			"key": "cartId",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastAddedItemId",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "quantity",
			"value": "",
			"type": "string"
		},
		{
			"key": "firstProductId",
			"value": ""
		},
		{
			"key": "secondProductId",
			"value": ""
		}
	]
}